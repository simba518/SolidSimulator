PROJECT(SolidSimulator C CXX Fortran)
CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
ADD_DEFINITIONS(-DPROJ_PATH="${CMAKE_SOURCE_DIR}/")

# debug and release
SET(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -O0 -Wall -g -ggdb -DHAVE_NAMESPACES  -ldl -pg")
SET(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} -O3 -DHAVE_NAMESPACES -ldl")

# print log informations
ADD_DEFINITIONS(-DLOG_INFO)
ADD_DEFINITIONS(-DLOG_ERROR)
ADD_DEFINITIONS(-DLOG_WARN)
ADD_DEFINITIONS(-DLOG_TRACE)
ADD_DEFINITIONS(-DLOG_DEBUG)

# check release or debug version
IF (NOT CMAKE_BUILD_TYPE)
  MESSAGE("generate release version")
  SET(CMAKE_BUILD_TYPE "release")
  SET(CMAKE_BUILD_TYPE_DIR "release")

ELSEIF (CMAKE_BUILD_TYPE STREQUAL "RELEASE")
  MESSAGE("generate release version")
  SET(CMAKE_BUILD_TYPE "release")
  SET(CMAKE_BUILD_TYPE_DIR "release")

ELSEIF(${CMAKE_BUILD_TYPE} STREQUAL "DEBUG")
  MESSAGE("generate debug version")
  SET(CMAKE_BUILD_TYPE_DIR "debug")
  SET(CMAKE_BUILD_TYPE "debug")
  
ENDIF (NOT CMAKE_BUILD_TYPE)

MESSAGE("CMAKE_CXX_FLAGS_DEBUG: " ${CMAKE_CXX_FLAGS_DEBUG})
MESSAGE("CMAKE_CXX_FLAGS_RELEASE: " ${CMAKE_CXX_FLAGS_RELEASE})

SET(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib/${CMAKE_BUILD_TYPE_DIR})
SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin/${CMAKE_BUILD_TYPE_DIR})

# find packages
SET( CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake_modules/;${CMAKE_MODULE_PATH}" )

FIND_PACKAGE(OpenGL REQUIRED)
FIND_PACKAGE(GLEW)

SET(Boost_USE_STATIC_LIBS        ON)
SET(Boost_USE_MULTITHREADED      ON)
SET(Boost_USE_STATIC_RUNTIME    OFF)
FIND_PACKAGE( Boost COMPONENTS filesystem system REQUIRED)

FIND_PACKAGE(SuperLU2.0 REQUIRED)
FIND_PACKAGE(Arpack REQUIRED)
FIND_PACKAGE(Arpack++ REQUIRED)
IF(Arpack++_FOUND)
  INCLUDE_DIRECTORIES(${ARPACK++_INCLUDE_DIR})
ENDIF(Arpack++_FOUND)

FIND_PACKAGE(SuiteSparse REQUIRED)
IF(SUITESPARSE_FOUND)
  INCLUDE_DIRECTORIES(${SUITESPARSE_INCLUDE_DIRS})
ENDIF(SUITESPARSE_FOUND)

FIND_PACKAGE(Eigen3 REQUIRED)
IF(EIGEN3_FOUND)
  INCLUDE_DIRECTORIES(${EIGEN3_INCLUDE_DIR})
ENDIF(EIGEN3_FOUND)

#####################################QT#####################################
FIND_PACKAGE(Qt4 COMPONENTS QtCore QtGui QtXml QtOpenGL REQUIRED )
FIND_PACKAGE(QGLViewer)
INCLUDE(${QT_USE_FILE})
ADD_DEFINITIONS(${QT_DEFINITIONS})
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR})
#####################################QT#####################################

INCLUDE_DIRECTORIES(
  /usr/local/include/utility
  ${PROJECT_SOURCE_DIR}/src/simulator
)

# projects
ADD_SUBDIRECTORY(src)